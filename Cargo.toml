[package]
name = "stateless-discord-bot"
description = "An example of stateless Discord Bot using Slash Commands feature and Cloudflare Workers."
repository = "https://github.com/siketyan/stateless-discord-bot.git"
license = "MIT"
version = "0.1.0"
authors = ["Squidtoon99 <arjun@squid.pink>", "Naoki Ikeguchi <root@siketyan.dev>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.55"
cfg-if = "1.0.0"
ed25519-dalek = "1.0.1"
hex = "0.4.2"
serde = { version = "1.0.118", features = ["derive"] }
serde_json = "1.0.60"
serde_repr = "0.1.6"
thiserror = "1.0.22"
reqwest = { version = "0.11.4", features = ["blocking", "json"] }
tracing = "0.1.26"
url = "^2.1"
meval = "0.2.0"
wasm-bindgen = { version = "0.2.76", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.26"
getrandom = { version = "0.2.3", features = ["wasm-bindgen", "js"] }
rand = { version = "0.8.4" }
chrono = "0.4.19"
bitflags = "1.3.2"
base64 = "0.13.0"
twilight-model = "0.7.0"
twilight-util = {version = "0.7.0", features=["builder"]}
twilight-embed-builder = "0.7.0"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.2", optional = true }
[dev-dependencies]
wasm-bindgen-test = "0.3.26"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
